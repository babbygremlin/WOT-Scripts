/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if _MSC_VER
#pragma pack (push,4)
#endif

#ifndef LEGEND_API
#define LEGEND_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern LEGEND_API FName LEGEND_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(GetItemAt)
AUTOGENERATE_NAME(SeePawn)
AUTOGENERATE_NAME(OnNotification)
AUTOGENERATE_NAME(OnDurationNotification)
AUTOGENERATE_NAME(OnAchievedRotation)
AUTOGENERATE_NAME(OnReachedDestination)
AUTOGENERATE_NAME(IsObserverIgnored)
AUTOGENERATE_NAME(DirectObserver)
AUTOGENERATE_NAME(ActorIsInPawnFOV)
AUTOGENERATE_NAME(GetDistanceBetweenCylinders)
AUTOGENERATE_NAME(GetDistanceBetweenActors)
AUTOGENERATE_NAME(EnableNotifier)
AUTOGENERATE_NAME(DisableNotifier)
AUTOGENERATE_NAME(OnDurationElapsed)
AUTOGENERATE_NAME(RejectOffender)
AUTOGENERATE_NAME(GetItemCount)
AUTOGENERATE_NAME(CollectItem)
AUTOGENERATE_NAME(DetermineGoalActorParams)
AUTOGENERATE_NAME(CreateGoalContext)
AUTOGENERATE_NAME(GetGoalActor)
AUTOGENERATE_NAME(UltimateGoalReached)
AUTOGENERATE_NAME(IntermediateGoalReached)

#ifndef NAMES_ONLY

enum EDurationNotifierIndex
{
    DNI_Visibility          =0,
    DNI_Rotation            =1,
    DNI_Movement            =2,
    DNI_Defensive           =3,
    DNI_Offensive           =4,
    DNI_Waiting             =5,
    DNI_Misc0               =6,
    DNI_Misc1               =7,
    DNI_Misc2               =8,
    DNI_None                =9,
    DNI_MAX                 =10,
};
enum ETransitionerIndex
{
    TI_Returning            =0,
    TI_Tracking             =1,
    TI_Retreating           =2,
    TI_ExternalDirective    =3,
    TI_Acquired             =4,
    TI_Investigating        =5,
    TI_Searching            =6,
    TI_NavigatingToGoal     =7,
    TI_SeekRefuge           =8,
    TI_FindHelp             =9,
    TI_NavigatingToSeal     =10,
    TI_NavigatingToSealAltar=11,
    TI_SoundAlarm           =12,
    TI_None                 =13,
    TI_MAX                  =14,
};
enum EGoalIndex
{
    GI_Threat               =0,
    GI_ExternalDirective    =1,
    GI_Refuge               =2,
    GI_Guarding             =3,
    GI_Colleague            =4,
    GI_Intermediate         =5,
    GI_Waiting              =6,
    GI_CurrentWaypoint      =7,
    GI_CurrentFocus         =8,
    GI_None                 =9,
    GI_MAX                  =10,
};
enum EFactionType
{
    FT_Unknown              =0,
    FT_Friendly             =1,
    FT_Enemy                =2,
    FT_MAX                  =3,
};
enum ETriStateBool
{
    TSB_Unknown             =0,
    TSB_True                =1,
    TSB_False               =2,
    TSB_MAX                 =3,
};
#define UCONST_HintName_UnForceStationary UnForceStationary
#define UCONST_HintName_ForceStationary ForceStationary
#define UCONST_HintName_AttemptDodge AttemptDodge
#define UCONST_HintName_AttemptAttack AttemptAttack

struct ALegendPawn_eventOnReachedDestination_Parms
{
    FVector Destination;
};
struct ALegendPawn_eventOnAchievedRotation_Parms
{
    FVector FocalPoint;
};
struct ALegendPawn_eventOnDurationNotification_Parms
{
    class UDurationNotifier* NotifingDuration;
};
struct ALegendPawn_eventOnNotification_Parms
{
    class UNotifier* Notification;
};
struct ALegendPawn_eventSeePawn_Parms
{
    class APawn* SeenPawn;
};
class LEGEND_API ALegendPawn : public APawn
{
public:
    FName DebugCategoryName;
    BITFIELD bShowDebugMessage:1 GCC_PACK(4);
    class UClass* DrawScaleInfoClass GCC_PACK(4);
    class UClass* MovementManagerClass;
    class UClass* RangeTransitionerClass;
    class UClass* ConstrainerClass;
    class UClass* GoalFactoryClass;
    class UClass* HandlerFactoryClass;
    FName GoalDescripterNames[9];
    FLOAT GoalPriorities[9];
    FLOAT GoalPriorityDistances[9];
    FLOAT GoalPriorityDistanceUsages[9];
    FLOAT GoalSuggestedSpeeds[9];
    FTGoalInfo GoalInfos[9];
    FTGoalPriorityInfo GoalPriorityInfos[9];
    BYTE CurrentGoalIdx;
    BITFIELD bPreferCurrentHandler:1 GCC_PACK(4);
    FTTransitionerInfo TransitionerInfos[13] GCC_PACK(4);
    class UDrawScaleInfo* CurrentDrawScaleInfo;
    class URangeIterator* CurrentRangeIterator;
    class UMovementManagerInterf* CurrentMovementManager;
    class UBehaviorConstrainer* CurrentConstrainer;
    class UDurationNotifier* DurationNotifiers[11];
    class UClass* DurationNotifierClasses[11];
    FName DurationNotifierNotifications[11];
    FLOAT DurationNotifierDurations[11];
    INT PeerNotificationRadiiCount;
    class UClass* DefaultInventoryTypes[5];
    BITFIELD bPerformedLatentOperation:1 GCC_PACK(4);
    BITFIELD bNotifyAchievedRotation:1;
    BITFIELD bNotifyReachedDestination:1;
    FLOAT MinTrackingDuration GCC_PACK(4);
    FLOAT LastTrackingTime;
    BYTE NavigationNugget;
    class UClass* ActivityManagerClass;
    FName ForceInactiveStateName;
    FLOAT DodgeVelocityFactor;
    FLOAT DodgeVelocityAlltitude;
    class UClass* NavigationProxyClass;
    class APawn* NavigationProxy;
    class UClass* AnimaterClass;
    class UPrimitiveMovementAnimater* CurrentAnimater;
    class UPrimitiveActorMovement2* CurrentPrimitiveMovement;
    DECLARE_FUNCTION(execLegendPawnShowSelf);
    DECLARE_FUNCTION(execGetPriorityGoalIndex);
    DECLARE_FUNCTION(execGetGoalByInt);
    DECLARE_FUNCTION(execGetGoal);
    void eventOnReachedDestination(FVector Destination)
    {
        ALegendPawn_eventOnReachedDestination_Parms Parms;
        Parms.Destination=Destination;
        ProcessEvent(FindFunctionChecked(LEGEND_OnReachedDestination),&Parms);
    }
    void eventOnAchievedRotation(FVector FocalPoint)
    {
        ALegendPawn_eventOnAchievedRotation_Parms Parms;
        Parms.FocalPoint=FocalPoint;
        ProcessEvent(FindFunctionChecked(LEGEND_OnAchievedRotation),&Parms);
    }
    void eventOnDurationNotification(class UDurationNotifier* NotifingDuration)
    {
        ALegendPawn_eventOnDurationNotification_Parms Parms;
        Parms.NotifingDuration=NotifingDuration;
        ProcessEvent(FindFunctionChecked(LEGEND_OnDurationNotification),&Parms);
    }
    void eventOnNotification(class UNotifier* Notification)
    {
        ALegendPawn_eventOnNotification_Parms Parms;
        Parms.Notification=Notification;
        ProcessEvent(FindFunctionChecked(LEGEND_OnNotification),&Parms);
    }
    void eventSeePawn(class APawn* SeenPawn)
    {
        ALegendPawn_eventSeePawn_Parms Parms;
        Parms.SeenPawn=SeenPawn;
        ProcessEvent(FindFunctionChecked(LEGEND_SeePawn),&Parms);
    }
    DECLARE_CLASS(ALegendPawn,APawn,0)
    NO_DEFAULT_CONSTRUCTOR(ALegendPawn)
};


class LEGEND_API ALegendActorComponent : public AActor
{
public:
    FName DebugCategoryName;
    DECLARE_CLASS(ALegendActorComponent,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(ALegendActorComponent)
};


class LEGEND_API ANotifierProxy : public ALegendActorComponent
{
public:
    class UNotifier* ActualNotifier;
    DECLARE_CLASS(ANotifierProxy,ALegendActorComponent,0)
    NO_DEFAULT_CONSTRUCTOR(ANotifierProxy)
};


struct AObservableDirective_eventDirectObserver_Parms
{
    class AActor* Observer;
    class APawn* EventInstigator;
};
struct AObservableDirective_eventIsObserverIgnored_Parms
{
    class AActor* Observer;
    class APawn* EventInstigator;
    BITFIELD ReturnValue;
};
class LEGEND_API AObservableDirective : public ALegendActorComponent
{
public:
    class UClass* ObserverClasses[16];
    FName ObserverTags[16];
    FName ObserverNames[16];
    BITFIELD bIgnoresObservers:1 GCC_PACK(4);
    class UClass* IgnoredClasses[16] GCC_PACK(4);
    FName IgnoredTags[16];
    FName IgnoredNames[16];
    BITFIELD bDurationDirective:1 GCC_PACK(4);
    class UDurationNotifier* ObservationMonitor GCC_PACK(4);
    FLOAT ObservationMonitorDuration;
    FName Notification;
    BITFIELD bShowDebugMessage:1 GCC_PACK(4);
    DECLARE_FUNCTION(execDirectObservers);
    void eventDirectObserver(class AActor* Observer, class APawn* EventInstigator)
    {
        AObservableDirective_eventDirectObserver_Parms Parms;
        Parms.Observer=Observer;
        Parms.EventInstigator=EventInstigator;
        ProcessEvent(FindFunctionChecked(LEGEND_DirectObserver),&Parms);
    }
    BITFIELD eventIsObserverIgnored(class AActor* Observer, class APawn* EventInstigator)
    {
        AObservableDirective_eventIsObserverIgnored_Parms Parms;
        Parms.Observer=Observer;
        Parms.EventInstigator=EventInstigator;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_IsObserverIgnored),&Parms);
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(AObservableDirective,ALegendActorComponent,0)
    NO_DEFAULT_CONSTRUCTOR(AObservableDirective)
};


class LEGEND_API ARegisterableDirective : public AObservableDirective
{
public:
    BITFIELD bIgnoreNonZoneRegistration:1 GCC_PACK(4);
    class AActor* Registered[50] GCC_PACK(4);
    DECLARE_FUNCTION(execDirectObservers);
    DECLARE_CLASS(ARegisterableDirective,AObservableDirective,0)
    NO_DEFAULT_CONSTRUCTOR(ARegisterableDirective)
};

enum EEvaluationRequirement
{
    ER_All                  =0,
    ER_Any                  =1,
    ER_MAX                  =2,
};
enum EEvaluationOrder
{
    EO_Distance             =0,
    EO_Visibility           =1,
    EO_MAX                  =2,
};
enum EDistanceRequirement
{
    DR_None                 =0,
    DR_LessOrEqual          =1,
    DR_Greater              =2,
    DR_MAX                  =3,
};
enum EVisibilityRequirement
{
    VR_None                 =0,
    VR_LineOfSight          =1,
    VR_CanSee               =2,
    VR_MAX                  =3,
};

class LEGEND_API AActivityManager : public ARegisterableDirective
{
public:
    BYTE EvaluationOrder;
    BYTE EvaluationRequirement;
    BYTE VisibilityRequirement;
    BYTE DistanceRequirement;
    FLOAT DistanceRequirement_Distance;
    FLOAT DistanceRequirement_DeltaAltitude;
    BITFIELD bExcludeNonZonePlayers:1 GCC_PACK(4);
    class APawn* RelevantPlayers[16] GCC_PACK(4);
    INT NotifiedActivePawns;
    INT NotifiedInactivePawns;
    FName ForceActiveNotification;
    FName ForceInactiveNotification;
    DECLARE_FUNCTION(execDetermineActivityNotification);
    DECLARE_FUNCTION(execFindRelevantPlayers);
    DECLARE_FUNCTION(execDirectObservers);
    DECLARE_CLASS(AActivityManager,ARegisterableDirective,0)
    NO_DEFAULT_CONSTRUCTOR(AActivityManager)
};


class LEGEND_API APathNodeIterator : public ALegendActorComponent
{
public:
    class ANavigationPoint* NodePath[256];
    INT NodeCount;
    INT NodeIndex;
    INT NodeCost;
    FVector NodeStart;
    FVector NodeEnd;
    DECLARE_FUNCTION(execGetLastVisible);
    DECLARE_FUNCTION(execGetLast);
    DECLARE_FUNCTION(execGetNext);
    DECLARE_FUNCTION(execGetCurrent);
    DECLARE_FUNCTION(execGetPrevious);
    DECLARE_FUNCTION(execGetFirst);
    DECLARE_FUNCTION(execBuildPath);
    DECLARE_CLASS(APathNodeIterator,ALegendActorComponent,0|CLASS_Transient)
    NO_DEFAULT_CONSTRUCTOR(APathNodeIterator)
};


class LEGEND_API APawnPathNodeIterator : public APathNodeIterator
{
public:
    class APawn* Pawn;
    DECLARE_FUNCTION(execSetPawn);
    DECLARE_CLASS(APawnPathNodeIterator,APathNodeIterator,0|CLASS_Transient)
    NO_DEFAULT_CONSTRUCTOR(APawnPathNodeIterator)
};

#define UCONST_MAX_PATH_NODES 512

class LEGEND_API APathNodeIteratorII : public ALegendActorComponent
{
public:
    class ANavigationPoint* NodePath[512];
    INT NodeCount;
    INT NodeIndex;
    INT NodeCost;
    FVector NodeStart;
    FVector NodeEnd;
    DECLARE_FUNCTION(execGetPrevious);
    DECLARE_FUNCTION(execGetNext);
    DECLARE_FUNCTION(execGetLast);
    DECLARE_FUNCTION(execGetFirst);
    DECLARE_FUNCTION(execGetCurrent);
    DECLARE_FUNCTION(execBuildPath);
    DECLARE_CLASS(APathNodeIteratorII,ALegendActorComponent,0|CLASS_Transient)
    NO_DEFAULT_CONSTRUCTOR(APathNodeIteratorII)
};


class LEGEND_API ADecalManager : public ALegendActorComponent
{
public:
    INT MaxDecals;
    FLOAT ShrinkTime;
    FLOAT DecalExpireTime;
    FLOAT SweepResolution;
    FLOAT SweepTimer;
    INT MaxDecalsCollectedPerSweep;
    FName SearchTypes[6];
    FLOAT VolumeScalePct;
    BITFIELD bSinglePass:1 GCC_PACK(4);
    DECLARE_FUNCTION(execAddDecal);
    DECLARE_CLASS(ADecalManager,ALegendActorComponent,0)
    NO_DEFAULT_CONSTRUCTOR(ADecalManager)
};


class LEGEND_API ALine : public AActor
{
public:
    FLOAT SegmentLength;
    BITFIELD bParticleDensityScaled:1 GCC_PACK(4);
    FVector Start GCC_PACK(4);
    FVector End;
    class AActor* StartActor;
    class AActor* EndActor;
    FLOAT CurrentLength;
    DECLARE_CLASS(ALine,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(ALine)
};


class LEGEND_API AStreak : public AActor
{
public:
    FLOAT SegmentLength;
    FVector Start;
    FVector End;
    class AActor* StartActor;
    class AActor* EndActor;
    BITFIELD bRandomizeTextures:1 GCC_PACK(4);
    class UTexture* Textures[32] GCC_PACK(4);
    INT NumTextures;
    FLOAT CurrentLength;
    BITFIELD bAlwaysFace:1 GCC_PACK(4);
    DECLARE_CLASS(AStreak,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(AStreak)
};


class LEGEND_API AGlobal : public AActor
{
public:
    DECLARE_CLASS(AGlobal,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(AGlobal)
};


class LEGEND_API ASunLight : public AActor
{
public:
    DECLARE_CLASS(ASunLight,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(ASunLight)
};

#define UCONST_UnrealDegreesFactor 182.044444

class LEGEND_API AIKTrailer : public AActor
{
public:
    FLOAT MaxAngleExt;
    FLOAT MinAngleExt;
    FLOAT AngleExt;
    FLOAT dist;
    BITFIELD bMaster:1 GCC_PACK(4);
    FName HeadTag GCC_PACK(4);
    class AActor* HeadActor;
    FVector LastHALocation;
    FRotator LastHARotation;
    BITFIELD bAutoLink:1 GCC_PACK(4);
    FName ChildTag GCC_PACK(4);
    class AIKTrailer* ChildTrailer;
    DECLARE_FUNCTION(execReposition);
    DECLARE_CLASS(AIKTrailer,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(AIKTrailer)
};


class LEGEND_API AActorRotator : public AActor
{
public:
    BITFIELD bLongDistance:1 GCC_PACK(4);
    BITFIELD bUpdateActorRotation:1;
    FRotator ActorRotationOffset GCC_PACK(4);
    BITFIELD bFaceIn:1 GCC_PACK(4);
    BITFIELD bFaceOut:1;
    FLOAT MinRadius GCC_PACK(4);
    FLOAT MaxRadius;
    FLOAT RadiusShiftRate;
    BITFIELD bBounceRadius:1 GCC_PACK(4);
    FLOAT CurrentRadius GCC_PACK(4);
    FLOAT NextRadius;
    FLOAT MinRotationRate;
    FLOAT MaxRotationRate;
    FLOAT RotationShiftRate;
    BITFIELD bBounceRotationRate:1 GCC_PACK(4);
    FLOAT CurrentRotationRate GCC_PACK(4);
    FLOAT NextRotationRate;
    FLOAT FRoll;
    FLOAT MaxHeight;
    FLOAT MinHeight;
    FLOAT HeightShiftRate;
    BITFIELD bBounceHeight:1 GCC_PACK(4);
    FLOAT CurrentHeight GCC_PACK(4);
    FLOAT NextHeight;
    class UClass* ActorRotatorClass;
    class AActor* MyActor;
    class AActor* MyActors[256];
    FVector ActorOrigins[256];
    DECLARE_FUNCTION(execCalcNextHeight);
    DECLARE_FUNCTION(execCalcNextRotationRate);
    DECLARE_FUNCTION(execCalcNextRadius);
    DECLARE_FUNCTION(execUpdateHeight);
    DECLARE_FUNCTION(execUpdateRotationRate);
    DECLARE_FUNCTION(execUpdateRadius);
    DECLARE_FUNCTION(execUpdate);
    DECLARE_CLASS(AActorRotator,AActor,0)
    NO_DEFAULT_CONSTRUCTOR(AActorRotator)
};

#define UCONST_BaseSizeY 768.0
#define UCONST_BaseSizeX 1024.0

class LEGEND_API ULegendCanvas : public UCanvas
{
public:
    FLOAT FactorX;
    FLOAT Factory;
    DECLARE_CLASS(ULegendCanvas,UCanvas,0)
    NO_DEFAULT_CONSTRUCTOR(ULegendCanvas)
};


class LEGEND_API ULegendObjectComponent : public UObject
{
public:
    FName DebugCategoryName;
    DECLARE_CLASS(ULegendObjectComponent,UObject,0)
    NO_DEFAULT_CONSTRUCTOR(ULegendObjectComponent)
};


struct UUtil_eventGetDistanceBetweenActors_Parms
{
    class AActor* A1;
    class AActor* A2;
    FLOAT ReturnValue;
};
struct UUtil_eventGetDistanceBetweenCylinders_Parms
{
    FVector FirstOrigin;
    FLOAT FirstRadius;
    FLOAT FirstHalfHeight;
    FVector SecondOrigin;
    FLOAT SecondRadius;
    FLOAT SecondHalfHeight;
    FLOAT ReturnValue;
};
struct UUtil_eventActorIsInPawnFOV_Parms
{
    class APawn* P;
    class AActor* A;
    FLOAT FOVCos;
    BITFIELD ReturnValue;
};
class LEGEND_API UUtil : public ULegendObjectComponent
{
public:
    FStringNoInit LoadClassFromNamePackages[4];
    FLOAT eventGetDistanceBetweenActors(class AActor* A1, class AActor* A2)
    {
        UUtil_eventGetDistanceBetweenActors_Parms Parms;
        Parms.A1=A1;
        Parms.A2=A2;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_GetDistanceBetweenActors),&Parms);
        return Parms.ReturnValue;
    }
    FLOAT eventGetDistanceBetweenCylinders(FVector FirstOrigin, FLOAT FirstRadius, FLOAT FirstHalfHeight, FVector SecondOrigin, FLOAT SecondRadius, FLOAT SecondHalfHeight)
    {
        UUtil_eventGetDistanceBetweenCylinders_Parms Parms;
        Parms.FirstOrigin=FirstOrigin;
        Parms.FirstRadius=FirstRadius;
        Parms.FirstHalfHeight=FirstHalfHeight;
        Parms.SecondOrigin=SecondOrigin;
        Parms.SecondRadius=SecondRadius;
        Parms.SecondHalfHeight=SecondHalfHeight;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_GetDistanceBetweenCylinders),&Parms);
        return Parms.ReturnValue;
    }
    BITFIELD eventActorIsInPawnFOV(class APawn* P, class AActor* A, FLOAT FOVCos)
    {
        UUtil_eventActorIsInPawnFOV_Parms Parms;
        Parms.P=P;
        Parms.A=A;
        Parms.FOVCos=FOVCos;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_ActorIsInPawnFOV),&Parms);
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(UUtil,ULegendObjectComponent,0)
    NO_DEFAULT_CONSTRUCTOR(UUtil)
};


class LEGEND_API USingleton : public ULegendObjectComponent
{
public:
    TArray<class UObject*> Instances;
    DECLARE_FUNCTION(execGetInstance);
    DECLARE_CLASS(USingleton,ULegendObjectComponent,0)
    NO_DEFAULT_CONSTRUCTOR(USingleton)
};


struct UNotifier_eventDisableNotifier_Parms
{
};
struct UNotifier_eventEnableNotifier_Parms
{
};
class LEGEND_API UNotifier : public ULegendObjectComponent
{
public:
    FName CallbackFunctionName;
    class UClass* NotifierProxyClass;
    class ANotifierProxy* ThisNotifierProxy;
    FName Notification;
    BITFIELD bEnabled:1 GCC_PACK(4);
    DECLARE_FUNCTION(execNotify);
    DECLARE_FUNCTION(execDisableNotifier);
    DECLARE_FUNCTION(execEnableNotifier);
    void eventDisableNotifier()
    {
        ProcessEvent(FindFunctionChecked(LEGEND_DisableNotifier),NULL);
    }
    void eventEnableNotifier()
    {
        ProcessEvent(FindFunctionChecked(LEGEND_EnableNotifier),NULL);
    }
    DECLARE_CLASS(UNotifier,ULegendObjectComponent,0)
    NO_DEFAULT_CONSTRUCTOR(UNotifier)
};


struct UDurationNotifier_eventOnDurationElapsed_Parms
{
    class AActor* TickedActor;
};
class LEGEND_API UDurationNotifier : public UNotifier
{
public:
    FLOAT Duration;
    FLOAT ElapsedTime;
    BITFIELD bRandomizeElapsedTime:1 GCC_PACK(4);
    FName DurationElapsedNotification GCC_PACK(4);
    FLOAT NotifierDurationNever;
    DECLARE_FUNCTION(execOnDurationElapsed);
    DECLARE_FUNCTION(execOnReflectedTick);
    DECLARE_FUNCTION(execHasDurationElapsed);
    DECLARE_FUNCTION(execSetDuration);
    void eventOnDurationElapsed(class AActor* TickedActor)
    {
        UDurationNotifier_eventOnDurationElapsed_Parms Parms;
        Parms.TickedActor=TickedActor;
        ProcessEvent(FindFunctionChecked(LEGEND_OnDurationElapsed),&Parms);
    }
    DECLARE_CLASS(UDurationNotifier,UNotifier,0)
    NO_DEFAULT_CONSTRUCTOR(UDurationNotifier)
};

enum EOffenderRejectionInfo
{
    ORI_NotRejected         =0,
    ORI_RespondedRejected   =1,
    ORI_ExplicitClassRejected=2,
    ORI_FovRejected         =3,
    ORI_NotMovingTowardRejected=4,
    ORI_ResponseTimeRejected=5,
    ORI_OtherRejection      =6,
    ORI_MAX                 =7,
};

struct UDefensiveDetector_eventRejectOffender_Parms
{
    class AActor* Inquirer;
    class AActor* OffendingActor;
    BYTE ReturnValue;
};
class LEGEND_API UDefensiveDetector : public UDurationNotifier
{
public:
    FLOAT CollectionRadius;
    class UClass* CollectClass;
    BITFIELD bRestrictCollectionToFOV:1 GCC_PACK(4);
    BITFIELD bRejectResponded:1;
    class UClass* ExplicitClassRejections[4] GCC_PACK(4);
    BITFIELD bActiveDetection:1 GCC_PACK(4);
    BITFIELD bPassiveDetection:1;
    FLOAT DefensivePerimeterRadiusFactor GCC_PACK(4);
    FLOAT DefensivePerimeterHeightFactor;
    FTDefensiveResponse DefensiveResponses[4];
    class UItemSorter* OffendingSorter;
    class AActor* ClosestOffender;
    BYTE ClosestOffenderRejectionInfo;
    class AActor* LastRespondedTo;
    FName OffendingNotification;
    FName NoOffendingNotification;
    DECLARE_FUNCTION(execGetArrivalTime);
    DECLARE_FUNCTION(execRejectOffender);
    DECLARE_FUNCTION(execCheckForOffending);
    BYTE eventRejectOffender(class AActor* Inquirer, class AActor* OffendingActor)
    {
        UDefensiveDetector_eventRejectOffender_Parms Parms;
        Parms.Inquirer=Inquirer;
        Parms.OffendingActor=OffendingActor;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_RejectOffender),&Parms);
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(UDefensiveDetector,UDurationNotifier,0)
    NO_DEFAULT_CONSTRUCTOR(UDefensiveDetector)
};


struct UCollection_eventGetItemCount_Parms
{
    INT CurrentItemCount;
    BITFIELD ReturnValue;
};
struct UCollection_eventGetItemAt_Parms
{
    class UObject* Item;
    INT ItemIndex;
    BITFIELD ReturnValue;
};
class LEGEND_API UCollection : public ULegendObjectComponent
{
public:
    DECLARE_FUNCTION(execGetItemCount);
    DECLARE_FUNCTION(execGetItemAt);
    BITFIELD eventGetItemCount(INT& CurrentItemCount)
    {
        UCollection_eventGetItemCount_Parms Parms;
        Parms.CurrentItemCount=CurrentItemCount;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_GetItemCount),&Parms);
        CurrentItemCount=Parms.CurrentItemCount;
        return Parms.ReturnValue;
    }
    BITFIELD eventGetItemAt(class UObject*& Item, INT ItemIndex)
    {
        UCollection_eventGetItemAt_Parms Parms;
        Parms.Item=Item;
        Parms.ItemIndex=ItemIndex;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_GetItemAt),&Parms);
        Item=Parms.Item;
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(UCollection,ULegendObjectComponent,0)
    NO_DEFAULT_CONSTRUCTOR(UCollection)
};

enum ERequirement
{
    R_Irrelevant            =0,
    R_Prefer                =1,
    R_Require               =2,
    R_MAX                   =3,
};
enum ETraceInfo
{
    TRACE_Untested          =0,
    TRACE_Unobstruced       =1,
    TRACE_GeometryObstruced =2,
    TRACE_MAX               =3,
};
enum EIterationType
{
    IT_RadiusActors         =0,
    IT_AllActors            =1,
    IT_MAX                  =2,
};

struct UItemCollector_eventCollectItem_Parms
{
    class AActor* Item;
    INT ItemIndex;
    BITFIELD ReturnValue;
};
class LEGEND_API UItemCollector : public UCollection
{
public:
    class AActor* CollectionSurrogate;
    class UClass* CollectedActorClass;
    BYTE IterationType;
    FLOAT CollectionRadius;
    BITFIELD bRejectSurrogate:1 GCC_PACK(4);
    FTItemRequirement CollectionReq GCC_PACK(4);
    INT CollectedItemCount;
    FTItemInfo ItemInfos[32];
    DECLARE_FUNCTION(execCollectItem);
    DECLARE_FUNCTION(execCollectItems);
    DECLARE_FUNCTION(execInitCollector);
    DECLARE_FUNCTION(execRejectItem);
    DECLARE_FUNCTION(execIsItemAccepted);
    DECLARE_FUNCTION(execGetItemTraceInfo);
    DECLARE_FUNCTION(execGetItemDistance);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execCollectRadiusItems);
    DECLARE_FUNCTION(execCollectAllItems);
    BITFIELD eventCollectItem(class AActor* Item, INT ItemIndex)
    {
        UItemCollector_eventCollectItem_Parms Parms;
        Parms.Item=Item;
        Parms.ItemIndex=ItemIndex;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_CollectItem),&Parms);
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(UItemCollector,UCollection,0)
    NO_DEFAULT_CONSTRUCTOR(UItemCollector)
};


class LEGEND_API UItemSorter : public UItemCollector
{
public:
    FTItemRequirement SortReq;
    FTItemSortInfo ItemSortInfos[32];
    DECLARE_FUNCTION(execFirstItemBeforeSecond);
    DECLARE_FUNCTION(execSortItems);
    DECLARE_FUNCTION(execInitSorter);
    DECLARE_CLASS(UItemSorter,UItemCollector,0)
    NO_DEFAULT_CONSTRUCTOR(UItemSorter)
};


class LEGEND_API UAiComponent : public ULegendObjectComponent
{
public:
    DECLARE_CLASS(UAiComponent,ULegendObjectComponent,0)
    NO_DEFAULT_CONSTRUCTOR(UAiComponent)
};

enum EGoalPriorityDistanceUsage
{
    GPDU_Unused             =0,
    GPDU_ZeroIfGreater      =1,
    GPDU_ZeroIfLess         =2,
    GPDU_MAX                =3,
};
#define UCONST_PriorityDistanceUsage_ZeroIfLess -3.0
#define UCONST_PriorityDistanceUsage_ZeroIfGreater -2.0
#define UCONST_PriorityDistanceUsage_Unused -1.0
#define UCONST_PriorityDistance_Unused -1
#define UCONST_Priority_Unused -1
#define UCONST_SuggestedSpeed_Unused -1
#define UCONST_SuggestedSpeedUnused -1.0

struct UGoalBase_eventDetermineGoalActorParams_Parms
{
    class UObject* InvokingObject;
    class AActor* CurrentGoalActor;
    FVector GoalLocation;
    FLOAT GoalRadius;
    FLOAT GoalHalfHeight;
};
class LEGEND_API UGoalBase : public UAiComponent
{
public:
    FName LocationGoalName;
    DECLARE_FUNCTION(execDetermineGoalActorParams);
    DECLARE_FUNCTION(execIsCloseEnough);
    void eventDetermineGoalActorParams(class UObject* InvokingObject, class AActor* CurrentGoalActor, FVector& GoalLocation, FLOAT& GoalRadius, FLOAT& GoalHalfHeight)
    {
        UGoalBase_eventDetermineGoalActorParams_Parms Parms;
        Parms.InvokingObject=InvokingObject;
        Parms.CurrentGoalActor=CurrentGoalActor;
        Parms.GoalLocation=GoalLocation;
        Parms.GoalRadius=GoalRadius;
        Parms.GoalHalfHeight=GoalHalfHeight;
        ProcessEvent(FindFunctionChecked(LEGEND_DetermineGoalActorParams),&Parms);
        GoalLocation=Parms.GoalLocation;
        GoalRadius=Parms.GoalRadius;
        GoalHalfHeight=Parms.GoalHalfHeight;
    }
    DECLARE_CLASS(UGoalBase,UAiComponent,0)
    NO_DEFAULT_CONSTRUCTOR(UGoalBase)
};

enum EGoalContextCacheItem
{
    GCCI_ReachableSuccessful=0,
    GCCI_ReachableUnsuccessful=1,
    GCCI_VisibleSuccessful  =2,
    GCCI_VisibleUnsuccessful=3,
    GCCI_PathableSuccessful =4,
    GCCI_PathableUnsuccessful=5,
    GCCI_MAX                =6,
};

struct UGoalContextInterf_eventGetGoalActor_Parms
{
    class AActor* CurrentGoalActor;
    BITFIELD ReturnValue;
};
struct UGoalContextInterf_eventCreateGoalContext_Parms
{
    class UGoalContextInterf* NewContext;
    class UGoalAbstracterInterf* ContextOf;
    class AActor* ContextActor;
};
class LEGEND_API UGoalContextInterf : public UGoalBase
{
public:
    DECLARE_FUNCTION(execGetGoalActor);
    DECLARE_FUNCTION(execGoalContextInit);
    DECLARE_FUNCTION(execIsContextFor);
    BITFIELD eventGetGoalActor(class AActor*& CurrentGoalActor)
    {
        UGoalContextInterf_eventGetGoalActor_Parms Parms;
        Parms.CurrentGoalActor=CurrentGoalActor;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_GetGoalActor),&Parms);
        CurrentGoalActor=Parms.CurrentGoalActor;
        return Parms.ReturnValue;
    }
    void eventCreateGoalContext(class UGoalContextInterf*& NewContext, class UGoalAbstracterInterf* ContextOf, class AActor* ContextActor)
    {
        UGoalContextInterf_eventCreateGoalContext_Parms Parms;
        Parms.NewContext=NewContext;
        Parms.ContextOf=ContextOf;
        Parms.ContextActor=ContextActor;
        ProcessEvent(FindFunctionChecked(LEGEND_CreateGoalContext),&Parms);
        NewContext=Parms.NewContext;
    }
    DECLARE_CLASS(UGoalContextInterf,UGoalBase,0)
    NO_DEFAULT_CONSTRUCTOR(UGoalContextInterf)
};

#define UCONST_bUseEnginePathing true
#define UCONST_FindReachableRandomNavigationPointRadius 800
#define UCONST_NavigableAvoidGoalRadius 500.0

struct UGoalContext_eventIntermediateGoalReached_Parms
{
};
struct UGoalContext_eventUltimateGoalReached_Parms
{
    BITFIELD ReturnValue;
};
class LEGEND_API UGoalContext : public UGoalContextInterf
{
public:
    class UClass* NavigationGoalType;
    class UClass* ReachedHandlerClass;
    class UObject* ContextObject;
    class UGoalCacheInfo* GoalCache;
    class UGoalAbstracterInterf* NavigationGoal;
    class UGoalReachedHandler* ReachedHandler;
    FRotator AssociatedRotation;
    BITFIELD bUseAssociatedRotation:1 GCC_PACK(4);
    void eventIntermediateGoalReached()
    {
        ProcessEvent(FindFunctionChecked(LEGEND_IntermediateGoalReached),NULL);
    }
    BITFIELD eventUltimateGoalReached()
    {
        UGoalContext_eventUltimateGoalReached_Parms Parms;
        Parms.ReturnValue=0;
        ProcessEvent(FindFunctionChecked(LEGEND_UltimateGoalReached),&Parms);
        return Parms.ReturnValue;
    }
    DECLARE_CLASS(UGoalContext,UGoalContextInterf,0)
    NO_DEFAULT_CONSTRUCTOR(UGoalContext)
};

enum EGoalCacheInfoItem
{
    GCII_ReachableSuccessful=0,
    GCII_ReachableUnsuccessful=1,
    GCII_VisibleSuccessful  =2,
    GCII_VisibleUnsuccessful=3,
    GCII_PathableSuccessful =4,
    GCII_PathableUnsuccessful=5,
    GCII_MAX                =6,
};
#define UCONST_bUseEnginePathing true
#define UCONST_CacheItemCurrentThreshold 32
#define UCONST_Query_GCII_ObjectLocation 2
#define UCONST_Query_GCII_GoalLocation 1

class LEGEND_API UGoalCacheInfo : public UGoalBase
{
public:
    class UObject* CacheObject;
    class UGoalAbstracterInterf* CacheGoal;
    FTGoalCacheInfoItem GoalInfoCache[6];
    class APathNodeIterator* NavigPathIter;
    class UClass* PathNodeIteratorType;
    DECLARE_FUNCTION(execCacheInfoInit);
    DECLARE_CLASS(UGoalCacheInfo,UGoalBase,0)
    NO_DEFAULT_CONSTRUCTOR(UGoalCacheInfo)
};


class LEGEND_API UGoalAbstracterInterf : public UGoalBase
{
public:
    DECLARE_FUNCTION(execGetLastVisibleLocation);
    DECLARE_FUNCTION(execSetSuggestedSpeed);
    DECLARE_FUNCTION(execGetSuggestedSpeed);
    DECLARE_FUNCTION(execSetGoalPriorityDistance);
    DECLARE_FUNCTION(execSetGoalPriority);
    DECLARE_FUNCTION(execGetGoalPriority);
    DECLARE_FUNCTION(execSetAssociatedRotation);
    DECLARE_FUNCTION(execGetAssociatedRotation);
    DECLARE_FUNCTION(execGetNavigationGoal);
    DECLARE_FUNCTION(execIsGoalNavigable);
    DECLARE_FUNCTION(execIsGoalPathable);
    DECLARE_FUNCTION(execIsGoalReachable);
    DECLARE_FUNCTION(execIsGoalVisible);
    DECLARE_FUNCTION(execIsGoalReached);
    DECLARE_FUNCTION(execGetGoalDistanceToCylinder);
    DECLARE_FUNCTION(execGetGoalDistance);
    DECLARE_FUNCTION(execGetGoalActor);
    DECLARE_FUNCTION(execGetGoalExtents);
    DECLARE_FUNCTION(execGetGoalLocation);
    DECLARE_FUNCTION(execGetGoalParams);
    DECLARE_FUNCTION(execIsReachableByGoal);
    DECLARE_FUNCTION(execIsVisibleByGoal);
    DECLARE_FUNCTION(execInvalidate);
    DECLARE_FUNCTION(execAssignVector);
    DECLARE_FUNCTION(execAssignObject);
    DECLARE_FUNCTION(execIsEquivalent);
    DECLARE_FUNCTION(execIsValid);
    DECLARE_FUNCTION(execIsGoalA);
    DECLARE_CLASS(UGoalAbstracterInterf,UGoalBase,0)
    NO_DEFAULT_CONSTRUCTOR(UGoalAbstracterInterf)
};


class LEGEND_API UGoalAbstracterImpl : public UGoalAbstracterInterf
{
public:
    class AActor* GoalActor;
    FVector GoalVector;
    BITFIELD bUseGoalVector:1 GCC_PACK(4);
    BITFIELD bPawnsMustBeAlive:1;
    FLOAT GoalPriority GCC_PACK(4);
    FLOAT GoalPriorityDistance;
    BYTE GoalPriorityDistanceUsage;
    FLOAT SuggestedSpeed;
    DECLARE_CLASS(UGoalAbstracterImpl,UGoalAbstracterInterf,0)
    NO_DEFAULT_CONSTRUCTOR(UGoalAbstracterImpl)
};


class LEGEND_API UContextInsensitiveGoal : public UGoalAbstracterImpl
{
public:
    FRotator AssociatedRotation;
    BITFIELD bUseAssociatedRotation:1 GCC_PACK(4);
    DECLARE_CLASS(UContextInsensitiveGoal,UGoalAbstracterImpl,0)
    NO_DEFAULT_CONSTRUCTOR(UContextInsensitiveGoal)
};


class LEGEND_API UContextSensitiveGoal : public UContextInsensitiveGoal
{
public:
    class UClass* GoalContextType;
    class UGoalContextInterf* GoalContexts[16];
    INT LastGoalContextIdx;
    DECLARE_CLASS(UContextSensitiveGoal,UContextInsensitiveGoal,0)
    NO_DEFAULT_CONSTRUCTOR(UContextSensitiveGoal)
};

#endif

AUTOGENERATE_FUNCTION(USingleton,-1,execGetInstance);
AUTOGENERATE_FUNCTION(UNotifier,-1,execNotify);
AUTOGENERATE_FUNCTION(UNotifier,-1,execDisableNotifier);
AUTOGENERATE_FUNCTION(UNotifier,-1,execEnableNotifier);
AUTOGENERATE_FUNCTION(UItemSorter,-1,execFirstItemBeforeSecond);
AUTOGENERATE_FUNCTION(UItemSorter,-1,execSortItems);
AUTOGENERATE_FUNCTION(UItemSorter,-1,execInitSorter);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execCollectItem);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execCollectItems);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execInitCollector);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execRejectItem);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execIsItemAccepted);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execGetItemTraceInfo);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execGetItemDistance);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execGetItem);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execCollectRadiusItems);
AUTOGENERATE_FUNCTION(UItemCollector,-1,execCollectAllItems);
AUTOGENERATE_FUNCTION(UCollection,-1,execGetItemCount);
AUTOGENERATE_FUNCTION(UCollection,-1,execGetItemAt);
AUTOGENERATE_FUNCTION(UGoalContextInterf,-1,execGetGoalActor);
AUTOGENERATE_FUNCTION(UGoalContextInterf,-1,execGoalContextInit);
AUTOGENERATE_FUNCTION(UGoalContextInterf,-1,execIsContextFor);
AUTOGENERATE_FUNCTION(UGoalBase,-1,execDetermineGoalActorParams);
AUTOGENERATE_FUNCTION(UGoalBase,-1,execIsCloseEnough);
AUTOGENERATE_FUNCTION(UGoalCacheInfo,-1,execCacheInfoInit);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetLastVisibleLocation);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execSetSuggestedSpeed);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetSuggestedSpeed);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execSetGoalPriorityDistance);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execSetGoalPriority);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalPriority);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execSetAssociatedRotation);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetAssociatedRotation);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetNavigationGoal);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsGoalNavigable);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsGoalPathable);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsGoalReachable);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsGoalVisible);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsGoalReached);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalDistanceToCylinder);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalDistance);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalActor);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalExtents);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalLocation);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execGetGoalParams);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsReachableByGoal);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsVisibleByGoal);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execInvalidate);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execAssignVector);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execAssignObject);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsEquivalent);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsValid);
AUTOGENERATE_FUNCTION(UGoalAbstracterInterf,-1,execIsGoalA);
AUTOGENERATE_FUNCTION(UDurationNotifier,-1,execOnDurationElapsed);
AUTOGENERATE_FUNCTION(UDurationNotifier,-1,execOnReflectedTick);
AUTOGENERATE_FUNCTION(UDurationNotifier,-1,execHasDurationElapsed);
AUTOGENERATE_FUNCTION(UDurationNotifier,-1,execSetDuration);
AUTOGENERATE_FUNCTION(UDefensiveDetector,-1,execGetArrivalTime);
AUTOGENERATE_FUNCTION(UDefensiveDetector,-1,execRejectOffender);
AUTOGENERATE_FUNCTION(UDefensiveDetector,-1,execCheckForOffending);
AUTOGENERATE_FUNCTION(ALegendPawn,-1,execLegendPawnShowSelf);
AUTOGENERATE_FUNCTION(ALegendPawn,-1,execGetPriorityGoalIndex);
AUTOGENERATE_FUNCTION(ALegendPawn,-1,execGetGoalByInt);
AUTOGENERATE_FUNCTION(ALegendPawn,-1,execGetGoal);
AUTOGENERATE_FUNCTION(ARegisterableDirective,-1,execDirectObservers);
AUTOGENERATE_FUNCTION(AObservableDirective,-1,execDirectObservers);
AUTOGENERATE_FUNCTION(APawnPathNodeIterator,-1,execSetPawn);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execGetLastVisible);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execGetLast);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execGetNext);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execGetCurrent);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execGetPrevious);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execGetFirst);
AUTOGENERATE_FUNCTION(APathNodeIterator,-1,execBuildPath);
AUTOGENERATE_FUNCTION(APathNodeIteratorII,1045,execGetPrevious);
AUTOGENERATE_FUNCTION(APathNodeIteratorII,1044,execGetNext);
AUTOGENERATE_FUNCTION(APathNodeIteratorII,1043,execGetLast);
AUTOGENERATE_FUNCTION(APathNodeIteratorII,1042,execGetFirst);
AUTOGENERATE_FUNCTION(APathNodeIteratorII,1041,execGetCurrent);
AUTOGENERATE_FUNCTION(APathNodeIteratorII,1040,execBuildPath);
AUTOGENERATE_FUNCTION(AIKTrailer,1020,execReposition);
AUTOGENERATE_FUNCTION(ADecalManager,1001,execAddDecal);
AUTOGENERATE_FUNCTION(AActorRotator,1016,execCalcNextHeight);
AUTOGENERATE_FUNCTION(AActorRotator,1015,execCalcNextRotationRate);
AUTOGENERATE_FUNCTION(AActorRotator,1014,execCalcNextRadius);
AUTOGENERATE_FUNCTION(AActorRotator,1013,execUpdateHeight);
AUTOGENERATE_FUNCTION(AActorRotator,1012,execUpdateRotationRate);
AUTOGENERATE_FUNCTION(AActorRotator,1011,execUpdateRadius);
AUTOGENERATE_FUNCTION(AActorRotator,1010,execUpdate);
AUTOGENERATE_FUNCTION(AActivityManager,-1,execDetermineActivityNotification);
AUTOGENERATE_FUNCTION(AActivityManager,-1,execFindRelevantPlayers);
AUTOGENERATE_FUNCTION(AActivityManager,-1,execDirectObservers);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif NAMES_ONLY

#if _MSC_VER
#pragma pack (pop)
#endif
